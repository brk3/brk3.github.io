<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>howto on brk3.github.io</title>
    <link>https://brk3.github.io/categories/howto/</link>
    <description>Recent content in howto on brk3.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Apr 2018 12:46:12 +0100</lastBuildDate>
    
	<atom:link href="https://brk3.github.io/categories/howto/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploying virtual baremetal with Ironic &amp; Kolla</title>
      <link>https://brk3.github.io/post/kolla-ironic-libvirt/</link>
      <pubDate>Thu, 19 Apr 2018 12:46:12 +0100</pubDate>
      
      <guid>https://brk3.github.io/post/kolla-ironic-libvirt/</guid>
      <description>A common barrier to entry when looking to try out OpenStack Ironic is that you need a baremetal machine to use with it. It turns out that it is possible to use a virtual machine in lieu of baremetal, and this is exactly what tools such as devstack and tripleo allow for. This guide details how the same setup can be done using Kolla. Given the complexity of Ironic and the variety of configurations possible, almost every step will have a multitude of variations and possibilities, I just detail what worked for me.</description>
    </item>
    
    <item>
      <title>Importing albums from Google Music to Spotify</title>
      <link>https://brk3.github.io/post/gmusic-to-spotify/</link>
      <pubDate>Fri, 26 May 2017 10:56:50 +0100</pubDate>
      
      <guid>https://brk3.github.io/post/gmusic-to-spotify/</guid>
      <description>I recently switched from Google Music to Spotify, and wanted to import all the various albums I&amp;rsquo;ve added to my library over the years. As of writing all current methods I found didn&amp;rsquo;t work, thankfully Spotify have a really nice API which makes this quite straight forward. You can find the script I put together at https://github.com/brk3/gmusic-to-spotify, here&amp;rsquo;s a quick overview how to use it.
You need to acquire api keys (https://developer.</description>
    </item>
    
    <item>
      <title>Nested Xen</title>
      <link>https://brk3.github.io/post/nested-hvm-xen/</link>
      <pubDate>Wed, 18 Jan 2017 16:47:06 +0000</pubDate>
      
      <guid>https://brk3.github.io/post/nested-hvm-xen/</guid>
      <description>As part of efforts to more regularly test the Xen hypervisor with Nova as part of OpenStack development, I&amp;rsquo;m spending some time figuring out how to virtualise Xen on Xen, specifically Oracle&amp;rsquo;s Oracle VM Server.
In virtualisation terms the different levels of hypervisor are referred to as LN, where N is the nesting level. In our setup, Oracle VM Server 3.4.2 (OVM-S) is running on baremetal as L0, another instance of OVM-S is running on that as L1, and the final OpenStack instantiated guest would be L2.</description>
    </item>
    
    <item>
      <title>Libvirt DNS</title>
      <link>https://brk3.github.io/post/libvirt-dns/</link>
      <pubDate>Mon, 09 Jan 2017 12:26:42 +0000</pubDate>
      
      <guid>https://brk3.github.io/post/libvirt-dns/</guid>
      <description>Here&amp;rsquo;s some short notes on how to configure DNS for libvirt managed VMs.
 Create a libvirt network, and add the following to it&amp;rsquo;s XML:  &amp;lt;network&amp;gt; ... &amp;lt;domain name=&amp;#39;my.domain.local&amp;#39;/&amp;gt; ... &amp;lt;/network&amp;gt;  Ensure the instance has DHCP_HOSTNAME set in network-scripts. I use virt-edit to do this:  virt-edit \  -d $name \  /etc/sysconfig/network-scripts/ifcfg-eth0 \  -e &amp;#39;s/^DHCP_HOSTNAME=.*/DHCP_HOSTNAME=&amp;#34;&amp;#39;$name&amp;#39;&amp;#34;/&amp;#39; (above is taken from https://gist.github.com/brk3/8d029adf03fbfcd5b69f473cea451355)
 Ensure the gateway is available as a nameserver in /etc/resolv.</description>
    </item>
    
    <item>
      <title>How to Hugo</title>
      <link>https://brk3.github.io/post/how-to-hugo/</link>
      <pubDate>Fri, 06 Jan 2017 17:15:03 +0000</pubDate>
      
      <guid>https://brk3.github.io/post/how-to-hugo/</guid>
      <description>Here&amp;rsquo;s how to publish new posts on this blog using Hugo.
 Install hugo (via apt or from https://github.com/spf13/hugo/releases)  apt install hugo  Setup the repo  git clone -b source git@github.com:brk3/brk3.github.io.git  Create a new post  hugo new post/how-to-hugo.md  Generate the site  hugo  Commit  git add . git commit -av git checkout master cp -r public/* . git add . git commit -am &amp;#34;Regenerate Site&amp;#34; git push --all </description>
    </item>
    
  </channel>
</rss>