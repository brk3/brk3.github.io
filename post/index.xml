<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on brk3.github.io</title>
    <link>https://brk3.github.io/post/</link>
    <description>Recent content in Posts on brk3.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Jul 2020 11:56:01 +0000</lastBuildDate>
    
	<atom:link href="https://brk3.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Python Poetry with AWS Codeartifact</title>
      <link>https://brk3.github.io/post/poetry-codeartifact/</link>
      <pubDate>Tue, 14 Jul 2020 11:56:01 +0000</pubDate>
      
      <guid>https://brk3.github.io/post/poetry-codeartifact/</guid>
      <description>Python Poetry is a really nice tool I&amp;rsquo;ve been using lately to simplfy the pain that is packaging in Python.
I had some issues getting it to publish to a CodeArtifact repository in AWS; the URL shown in the console for pypi based setups was resulting in the following error:
$ poetry publish -r myrepo -u aws -p $CODEARTIFACT_AUTH_TOKEN Publishing hello-world (0.1.0) to myrepo - Uploading hello-world-0.1.0.tar.gz 100% [UploadError] HTTP Error 404: Not Found However, if you take the URL from the CodeArtifact console for twine it will work just fine.</description>
    </item>
    
    <item>
      <title>How to replace coredns with kube-dns</title>
      <link>https://brk3.github.io/post/kubeadm-dns/</link>
      <pubDate>Thu, 21 Mar 2019 12:01:43 +0000</pubDate>
      
      <guid>https://brk3.github.io/post/kubeadm-dns/</guid>
      <description>CoreDNS is the default DNS addon in Kubernetes since 1.13. I recently needed to switch back to kube-dns for some testing, and it wasn&amp;rsquo;t obvious from the documentation how to do that. Here&amp;rsquo;s how I went about it for reference.
These steps assume kubeadm 1.13.
Steps First, initialise the master node, skipping the coredns addon phase:
kubeadm init --pod-network-cidr=10.244.0.0/16 --skip-phases=addon/coredns Then prepare a kubeadm override config to specify kube-dns is to be used instead of the default:</description>
    </item>
    
    <item>
      <title>Deploying virtual baremetal with Ironic &amp; Kolla</title>
      <link>https://brk3.github.io/post/kolla-ironic-libvirt/</link>
      <pubDate>Thu, 19 Apr 2018 12:46:12 +0100</pubDate>
      
      <guid>https://brk3.github.io/post/kolla-ironic-libvirt/</guid>
      <description>A common barrier to entry when looking to try out OpenStack Ironic is that you need a baremetal machine to use with it. It turns out that it is possible to use a virtual machine in lieu of baremetal, and this is exactly what tools such as devstack and tripleo allow for. This guide details how the same setup can be done using Kolla. Given the complexity of Ironic and the variety of configurations possible, almost every step will have a multitude of variations and possibilities, I just detail what worked for me.</description>
    </item>
    
    <item>
      <title>Debugging Murano with Kolla</title>
      <link>https://brk3.github.io/post/debugging-murano-with-kolla/</link>
      <pubDate>Thu, 15 Jun 2017 16:31:32 +0100</pubDate>
      
      <guid>https://brk3.github.io/post/debugging-murano-with-kolla/</guid>
      <description>The kolla-ansible project recently gained support for hacking on the OpenStack services it deploys, much the same as devstack.
Services are being added as we go, so it&amp;rsquo;s unlikely all will be supported for the Pike release. That said it&amp;rsquo;s quite easy to add support for new projects, so if the one you&amp;rsquo;re interested in isn&amp;rsquo;t there yet have a go!
I&amp;rsquo;ve been using this for the past month or so to submit patches into the Murano project, and wanted to give a short overview of how Kolla can be used to do this.</description>
    </item>
    
    <item>
      <title>Importing albums from Google Music to Spotify</title>
      <link>https://brk3.github.io/post/gmusic-to-spotify/</link>
      <pubDate>Fri, 26 May 2017 10:56:50 +0100</pubDate>
      
      <guid>https://brk3.github.io/post/gmusic-to-spotify/</guid>
      <description>I recently switched from Google Music to Spotify, and wanted to import all the various albums I&amp;rsquo;ve added to my library over the years. As of writing all current methods I found didn&amp;rsquo;t work, thankfully Spotify have a really nice API which makes this quite straight forward. You can find the script I put together at https://github.com/brk3/gmusic-to-spotify, here&amp;rsquo;s a quick overview how to use it.
You need to acquire api keys (https://developer.</description>
    </item>
    
    <item>
      <title>Nested Xen</title>
      <link>https://brk3.github.io/post/nested-hvm-xen/</link>
      <pubDate>Wed, 18 Jan 2017 16:47:06 +0000</pubDate>
      
      <guid>https://brk3.github.io/post/nested-hvm-xen/</guid>
      <description>As part of efforts to more regularly test the Xen hypervisor with Nova as part of OpenStack development, I&amp;rsquo;m spending some time figuring out how to virtualise Xen on Xen, specifically Oracle&amp;rsquo;s Oracle VM Server.
In virtualisation terms the different levels of hypervisor are referred to as LN, where N is the nesting level. In our setup, Oracle VM Server 3.4.2 (OVM-S) is running on baremetal as L0, another instance of OVM-S is running on that as L1, and the final OpenStack instantiated guest would be L2.</description>
    </item>
    
    <item>
      <title>Libvirt DNS</title>
      <link>https://brk3.github.io/post/libvirt-dns/</link>
      <pubDate>Mon, 09 Jan 2017 12:26:42 +0000</pubDate>
      
      <guid>https://brk3.github.io/post/libvirt-dns/</guid>
      <description>Here&amp;rsquo;s some short notes on how to configure DNS for libvirt managed VMs.
 Create a libvirt network, and add the following to it&amp;rsquo;s XML:  &amp;lt;network&amp;gt; ... &amp;lt;domain name=&amp;#39;my.domain.local&amp;#39;/&amp;gt; ... &amp;lt;/network&amp;gt;  Ensure the instance has DHCP_HOSTNAME set in network-scripts. I use virt-edit to do this:  virt-edit \  -d $name \  /etc/sysconfig/network-scripts/ifcfg-eth0 \  -e &amp;#39;s/^DHCP_HOSTNAME=.*/DHCP_HOSTNAME=&amp;#34;&amp;#39;$name&amp;#39;&amp;#34;/&amp;#39; (above is taken from https://gist.github.com/brk3/8d029adf03fbfcd5b69f473cea451355)
 Ensure the gateway is available as a nameserver in /etc/resolv.</description>
    </item>
    
    <item>
      <title>How to Hugo</title>
      <link>https://brk3.github.io/post/how-to-hugo/</link>
      <pubDate>Fri, 06 Jan 2017 17:15:03 +0000</pubDate>
      
      <guid>https://brk3.github.io/post/how-to-hugo/</guid>
      <description>Here&amp;rsquo;s how to publish new posts on this blog using Hugo.
 Install hugo (via apt or from https://github.com/spf13/hugo/releases)  apt install hugo  Setup the repo  git clone -b source git@github.com:brk3/brk3.github.io.git  Create a new post  hugo new post/how-to-hugo.md &amp;lt;edit&amp;gt; git commit -av  Republish the site  hugo git checkout master cp -r public/* . git add . git commit -am &amp;#34;Regenerate Site&amp;#34; git push --all </description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://brk3.github.io/post/hello-world/</link>
      <pubDate>Thu, 01 Dec 2016 14:13:31 +0000</pubDate>
      
      <guid>https://brk3.github.io/post/hello-world/</guid>
      <description>Hello World!</description>
    </item>
    
  </channel>
</rss>